/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package interfaz;

import BaseDatos.conexion;
import java.awt.Color;
import java.awt.Cursor;
import java.awt.event.KeyEvent;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.util.ArrayList;
import java.io.*;
import javax.swing.DefaultListModel;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import mensajes.Mensaje;
import mensajes.MensajeInput;

/**
 *
 * @author perne
 */
public class Usuarios extends javax.swing.JPanel {

    /**
     * Creates new form Administracion
     */
    DefaultTableModel modeloLista;
    Mensaje mesaje;
    MensajeInput mi;
    Connection con = new conexion().getCon();
    int Seleccion = -1;

    public Usuarios() {

        modeloLista = new DefaultTableModel(null, getColumnas());
        llenarTabla();
        super.setBounds(419, 75, 650, 590);
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel2 = new javax.swing.JPanel();
        jPanel4 = new javax.swing.JPanel();
        jTextFieldID1 = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabelTitulo = new javax.swing.JLabel();
        jPanelGuardar = new javax.swing.JPanel();
        jLabelGuardar = new javax.swing.JLabel();
        jPanelBuscar = new javax.swing.JPanel();
        jLabelBuscar = new javax.swing.JLabel();
        jPanelActualizar = new javax.swing.JPanel();
        jLabelActualizar = new javax.swing.JLabel();
        jPanelEliminar = new javax.swing.JPanel();
        jLabeEliminar = new javax.swing.JLabel();
        jLabelEstado = new javax.swing.JLabel();
        jTextFieldUsuario = new javax.swing.JTextField();
        jTextFieldNombre = new javax.swing.JTextField();
        jPasswordFieldclave = new javax.swing.JPasswordField();
        jLabelUsuario = new javax.swing.JLabel();
        jLabelNombre = new javax.swing.JLabel();
        jLabelClave = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTableUsuarios = new javax.swing.JTable();
        jComboBoxPerfil = new javax.swing.JComboBox();
        jLabelPerfil = new javax.swing.JLabel();
        jComboBoxEstado = new javax.swing.JComboBox();

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 155, Short.MAX_VALUE)
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 45, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 155, Short.MAX_VALUE)
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 45, Short.MAX_VALUE)
        );

        jTextFieldID1.setEditable(false);

        jLabel6.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(255, 255, 255));
        jLabel6.setText("ID");

        jLabel7.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(255, 255, 255));
        jLabel7.setText("ID");

        setBackground(new java.awt.Color(0, 106, 193));
        setPreferredSize(new java.awt.Dimension(672, 599));

        jLabelTitulo.setFont(new java.awt.Font("Segoe UI", 0, 25)); // NOI18N
        jLabelTitulo.setForeground(new java.awt.Color(255, 255, 255));
        jLabelTitulo.setText("Registro de usuarios");

        jPanelGuardar.setBackground(new java.awt.Color(0, 106, 193));
        jPanelGuardar.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 255, 255), 2));
        jPanelGuardar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jPanelGuardarMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                jPanelGuardarMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                jPanelGuardarMouseExited(evt);
            }
        });

        jLabelGuardar.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabelGuardar.setForeground(new java.awt.Color(255, 255, 255));
        jLabelGuardar.setText("Guardar");
        jLabelGuardar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabelGuardarMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                jLabelGuardarMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                jLabelGuardarMouseExited(evt);
            }
        });

        javax.swing.GroupLayout jPanelGuardarLayout = new javax.swing.GroupLayout(jPanelGuardar);
        jPanelGuardar.setLayout(jPanelGuardarLayout);
        jPanelGuardarLayout.setHorizontalGroup(
            jPanelGuardarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelGuardarLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabelGuardar)
                .addContainerGap(18, Short.MAX_VALUE))
        );
        jPanelGuardarLayout.setVerticalGroup(
            jPanelGuardarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanelGuardarLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabelGuardar)
                .addContainerGap())
        );

        jPanelBuscar.setBackground(new java.awt.Color(0, 106, 193));
        jPanelBuscar.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 255, 255), 2));
        jPanelBuscar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jPanelBuscarMouseClicked(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                jPanelBuscarMouseExited(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                jPanelBuscarMouseEntered(evt);
            }
        });

        jLabelBuscar.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabelBuscar.setForeground(new java.awt.Color(255, 255, 255));
        jLabelBuscar.setText("Buscar");

        javax.swing.GroupLayout jPanelBuscarLayout = new javax.swing.GroupLayout(jPanelBuscar);
        jPanelBuscar.setLayout(jPanelBuscarLayout);
        jPanelBuscarLayout.setHorizontalGroup(
            jPanelBuscarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelBuscarLayout.createSequentialGroup()
                .addGap(25, 25, 25)
                .addComponent(jLabelBuscar)
                .addContainerGap(28, Short.MAX_VALUE))
        );
        jPanelBuscarLayout.setVerticalGroup(
            jPanelBuscarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelBuscarLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabelBuscar)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanelActualizar.setBackground(new java.awt.Color(0, 106, 193));
        jPanelActualizar.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 255, 255), 2));
        jPanelActualizar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jPanelActualizarMouseClicked(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                jPanelActualizarMouseExited(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                jPanelActualizarMouseEntered(evt);
            }
        });

        jLabelActualizar.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabelActualizar.setForeground(new java.awt.Color(255, 255, 255));
        jLabelActualizar.setText("Actualizar");

        javax.swing.GroupLayout jPanelActualizarLayout = new javax.swing.GroupLayout(jPanelActualizar);
        jPanelActualizar.setLayout(jPanelActualizarLayout);
        jPanelActualizarLayout.setHorizontalGroup(
            jPanelActualizarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelActualizarLayout.createSequentialGroup()
                .addGap(25, 25, 25)
                .addComponent(jLabelActualizar)
                .addContainerGap(25, Short.MAX_VALUE))
        );
        jPanelActualizarLayout.setVerticalGroup(
            jPanelActualizarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanelActualizarLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabelActualizar)
                .addContainerGap())
        );

        jPanelEliminar.setBackground(new java.awt.Color(0, 106, 193));
        jPanelEliminar.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 255, 255), 2));
        jPanelEliminar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jPanelEliminarMouseClicked(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                jPanelEliminarMouseExited(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                jPanelEliminarMouseEntered(evt);
            }
        });

        jLabeEliminar.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabeEliminar.setForeground(new java.awt.Color(255, 255, 255));
        jLabeEliminar.setText("Eliminar");

        javax.swing.GroupLayout jPanelEliminarLayout = new javax.swing.GroupLayout(jPanelEliminar);
        jPanelEliminar.setLayout(jPanelEliminarLayout);
        jPanelEliminarLayout.setHorizontalGroup(
            jPanelEliminarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelEliminarLayout.createSequentialGroup()
                .addGap(25, 25, 25)
                .addComponent(jLabeEliminar)
                .addContainerGap(28, Short.MAX_VALUE))
        );
        jPanelEliminarLayout.setVerticalGroup(
            jPanelEliminarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanelEliminarLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabeEliminar)
                .addContainerGap())
        );

        jLabelEstado.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabelEstado.setForeground(new java.awt.Color(255, 255, 255));
        jLabelEstado.setText("Estado");

        jTextFieldNombre.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jTextFieldNombreKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jTextFieldNombreKeyTyped(evt);
            }
        });

        jLabelUsuario.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabelUsuario.setForeground(new java.awt.Color(255, 255, 255));
        jLabelUsuario.setText("Usuario");

        jLabelNombre.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabelNombre.setForeground(new java.awt.Color(255, 255, 255));
        jLabelNombre.setText("Nombre");

        jLabelClave.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabelClave.setForeground(new java.awt.Color(255, 255, 255));
        jLabelClave.setText("Clave");

        jTableUsuarios.setModel(modeloLista);
        jTableUsuarios.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTableUsuariosMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(jTableUsuarios);

        jComboBoxPerfil.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Administrador", "Soporte"}));

        jLabelPerfil.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabelPerfil.setForeground(new java.awt.Color(255, 255, 255));
        jLabelPerfil.setText("Perfil");

        jComboBoxEstado.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Activo", "Inactivo"}));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane2)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(90, 90, 90)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addComponent(jLabelTitulo, javax.swing.GroupLayout.PREFERRED_SIZE, 246, Short.MAX_VALUE)
                                .addGroup(layout.createSequentialGroup()
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(jLabelUsuario)
                                        .addComponent(jLabelNombre)
                                        .addComponent(jLabelClave)
                                        .addComponent(jLabelEstado)
                                        .addComponent(jLabelPerfil))
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                        .addComponent(jTextFieldUsuario, javax.swing.GroupLayout.DEFAULT_SIZE, 172, Short.MAX_VALUE)
                                        .addComponent(jTextFieldNombre, javax.swing.GroupLayout.DEFAULT_SIZE, 172, Short.MAX_VALUE)
                                        .addComponent(jPasswordFieldclave, javax.swing.GroupLayout.DEFAULT_SIZE, 172, Short.MAX_VALUE)
                                        .addComponent(jComboBoxPerfil, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(jComboBoxEstado, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jPanelGuardar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jPanelActualizar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jPanelEliminar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jPanelBuscar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 112, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabelTitulo)
                .addGap(33, 33, 33)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTextFieldUsuario, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabelUsuario))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTextFieldNombre, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabelNombre))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jPasswordFieldclave, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabelClave))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabelEstado)
                    .addComponent(jComboBoxEstado, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jComboBoxPerfil, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabelPerfil))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 54, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanelBuscar, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jPanelEliminar, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jPanelActualizar, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jPanelGuardar, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(29, 29, 29)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 133, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(91, 91, 91))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void jPanelGuardarMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jPanelGuardarMouseEntered
        jPanelGuardar.setBackground(new java.awt.Color(244, 244, 244));
        jLabelGuardar.setForeground(Color.BLACK);
        setCursor(Cursor.getPredefinedCursor(Cursor.HAND_CURSOR));
    }//GEN-LAST:event_jPanelGuardarMouseEntered

    private void jPanelGuardarMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jPanelGuardarMouseExited
        jPanelGuardar.setBackground(new java.awt.Color(0, 106, 193));
        jLabelGuardar.setForeground(Color.WHITE);
        setCursor(Cursor.getPredefinedCursor(Cursor.DEFAULT_CURSOR));
    }//GEN-LAST:event_jPanelGuardarMouseExited

    private void jPanelEliminarMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jPanelEliminarMouseEntered
        jPanelEliminar.setBackground(new java.awt.Color(244, 244, 244));
        jLabeEliminar.setForeground(Color.BLACK);
        setCursor(Cursor.getPredefinedCursor(Cursor.HAND_CURSOR));
    }//GEN-LAST:event_jPanelEliminarMouseEntered

    private void jPanelEliminarMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jPanelEliminarMouseExited
        jPanelEliminar.setBackground(new java.awt.Color(0, 106, 193));
        jLabeEliminar.setForeground(Color.WHITE);
        setCursor(Cursor.getPredefinedCursor(Cursor.DEFAULT_CURSOR));
    }//GEN-LAST:event_jPanelEliminarMouseExited

    private void jPanelBuscarMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jPanelBuscarMouseEntered
        jPanelBuscar.setBackground(new java.awt.Color(244, 244, 244));
        jLabelBuscar.setForeground(Color.BLACK);
        setCursor(Cursor.getPredefinedCursor(Cursor.HAND_CURSOR));
    }//GEN-LAST:event_jPanelBuscarMouseEntered

    private void jPanelBuscarMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jPanelBuscarMouseExited
        jPanelBuscar.setBackground(new java.awt.Color(0, 106, 193));
        jLabelBuscar.setForeground(Color.WHITE);
        setCursor(Cursor.getPredefinedCursor(Cursor.DEFAULT_CURSOR));
    }//GEN-LAST:event_jPanelBuscarMouseExited

    private void jPanelActualizarMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jPanelActualizarMouseEntered
        jPanelActualizar.setBackground(new java.awt.Color(244, 244, 244));
        jLabelActualizar.setForeground(Color.BLACK);
        setCursor(Cursor.getPredefinedCursor(Cursor.HAND_CURSOR));
    }//GEN-LAST:event_jPanelActualizarMouseEntered

    private void jPanelActualizarMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jPanelActualizarMouseExited
        jPanelActualizar.setBackground(new java.awt.Color(0, 106, 193));
        jLabelActualizar.setForeground(Color.WHITE);
        setCursor(Cursor.getPredefinedCursor(Cursor.DEFAULT_CURSOR));
    }//GEN-LAST:event_jPanelActualizarMouseExited

    private void jLabelGuardarMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabelGuardarMouseClicked
        String usuario = jTextFieldUsuario.getText();
        String nombre = jTextFieldNombre.getText();
        String psw = jPasswordFieldclave.getText();

        if (usuario.length() == 0) {
            mesaje = new Mensaje((JFrame) getRootPane().getParent(), true, "El campo de Usuario está vacío", 0);
            mesaje.setVisible(true);
        } else {
            int limite = 8;
            if (usuario.length() >= limite) {
                evt.consume();
                if (nombre.length() == 0) {
                    mesaje = new Mensaje((JFrame) getRootPane().getParent(), true, "El campo de Nombre está vacío", 0);
                    mesaje.setVisible(true);
                } else {
                    if (psw.length() == 0) {
                        mesaje = new Mensaje((JFrame) getRootPane().getParent(), true, "El campo de Clave está vacío", 0);
                        mesaje.setVisible(true);
                    } else {
                        if (psw.length() >= limite) {
                            evt.consume();
                            if (nombre.equals(psw)) {
                                mesaje = new Mensaje((JFrame) getRootPane().getParent(), true, "Procura que la Clave no sea igual al Nombre", 0);
                                mesaje.setVisible(true);
                            } else {
                                Guardar(jTextFieldUsuario.getText(), jTextFieldNombre.getText(), jPasswordFieldclave.getText(), (String) jComboBoxPerfil.getSelectedItem(), (String) jComboBoxEstado.getSelectedItem());
                                jTextFieldID1.setText("");
                                jTextFieldNombre.setText("");
                                jTextFieldUsuario.setText("");
                                jPasswordFieldclave.setText("");
                            }
                        } else {
                            mesaje = new Mensaje((JFrame) getRootPane().getParent(), true, "La clave debe de tener mínimo 8 caracteres", 0);
                            mesaje.setVisible(true);
                        }
                    }
                }
            } else {
                mesaje = new Mensaje((JFrame) getRootPane().getParent(), true, "El Usuario debe contener como mínimo 8 caracteres", 0);
                mesaje.setVisible(true);
            }
        }
    }//GEN-LAST:event_jLabelGuardarMouseClicked

    private void jPanelGuardarMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jPanelGuardarMouseClicked
        jLabelGuardarMouseClicked(evt);
    }//GEN-LAST:event_jPanelGuardarMouseClicked

    private void jPanelEliminarMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jPanelEliminarMouseClicked

        mi = new MensajeInput((JFrame) getRootPane().getParent(), true, "Ingrese el nombre del usuario a eliminar");
        mi.setVisible(true);

        String usuario = mi.consultarUsuario();

        if (usuario.equals("")) {
            mesaje = new Mensaje((JFrame) getRootPane().getParent(), true, "No hay valor asignado", 0);
            mesaje.setVisible(true);
        } else {
            Eliminar(usuario);
        }

    }//GEN-LAST:event_jPanelEliminarMouseClicked

    private void jPanelBuscarMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jPanelBuscarMouseClicked

        mi = new MensajeInput((JFrame) getRootPane().getParent(), true, "Ingrese el nombre del usuario a buscar");
        mi.setVisible(true);

        String usuario = mi.consultarUsuario();

        if (usuario.equals("")) {
            mesaje = new Mensaje((JFrame) getRootPane().getParent(), true, "No hay valor asignado", 0);
            mesaje.setVisible(true);
        } else {
            Buscar(usuario);
        }
    }//GEN-LAST:event_jPanelBuscarMouseClicked

    private void jPanelActualizarMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jPanelActualizarMouseClicked
        String usuario = jTextFieldUsuario.getText();
        String nombre = jTextFieldNombre.getText();
        String psw = jPasswordFieldclave.getText();

        if (usuario.length() == 0) {
            JOptionPane.showMessageDialog(null, "Campo de usuario vacío", "Error", 0);
        } else {
            int limite = 8;
            if (usuario.length() >= limite) {
                evt.consume();
                if (nombre.length() == 0) {
                    JOptionPane.showMessageDialog(null, "Campo de nombre vacío ", "Error", 0);
                } else {
                    if (psw.length() == 0) {
                        JOptionPane.showMessageDialog(null, "Campo de clave vacía", "Error", 0);
                    } else {
                        if (psw.length() >= limite) {
                            evt.consume();
                            if (nombre.equals(psw)) {
                                JOptionPane.showMessageDialog(null, "La clave no puede ser el nombre", "Error", 0);
                            } else {
                                Actualizar(jTextFieldUsuario.getText(), jTextFieldNombre.getText(), jPasswordFieldclave.getText(), (String) jComboBoxPerfil.getSelectedItem(), (String) jComboBoxEstado.getSelectedItem());
                                jTextFieldID1.setText("");
                                jTextFieldNombre.setText("");
                                jTextFieldUsuario.setText("");
                                jPasswordFieldclave.setText("");
                            }
                        } else {
                            JOptionPane.showMessageDialog(null, "La clave debe contener mínimo 8 caracteres", "Error", 0);
                        }
                    }
                }
            } else {
                JOptionPane.showMessageDialog(null, "El usuario debe contener mínimo 8 caracteres", "Error", 0);
            }
        }
    }//GEN-LAST:event_jPanelActualizarMouseClicked

    private void jLabelGuardarMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabelGuardarMouseEntered
        jPanelGuardar.setBackground(new java.awt.Color(244, 244, 244));
        jLabelGuardar.setForeground(Color.BLACK);
        setCursor(Cursor.getPredefinedCursor(Cursor.HAND_CURSOR));
    }//GEN-LAST:event_jLabelGuardarMouseEntered

    private void jLabelGuardarMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabelGuardarMouseExited
        jPanelGuardar.setBackground(new java.awt.Color(0, 106, 193));
        jLabelGuardar.setForeground(Color.WHITE);
        setCursor(Cursor.getPredefinedCursor(Cursor.DEFAULT_CURSOR));
    }//GEN-LAST:event_jLabelGuardarMouseExited

    private void jTextFieldNombreKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextFieldNombreKeyReleased
    }//GEN-LAST:event_jTextFieldNombreKeyReleased

    private void jTextFieldNombreKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextFieldNombreKeyTyped
        int k = (int) evt.getKeyChar();
        if (k > 47 && k < 58) {
            evt.setKeyChar((char) KeyEvent.VK_CLEAR);
            JOptionPane.showMessageDialog(null, "No puede ingresar numeros!!!", "Ventana Error Datos", JOptionPane.ERROR_MESSAGE);
        }
        if (k == 10) {
            jTextFieldNombre.transferFocus();
        }
    }//GEN-LAST:event_jTextFieldNombreKeyTyped

    private void jTableUsuariosMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTableUsuariosMouseClicked
        // TODO add your handling code here:
        BuscarPorIndice(jTableUsuarios.getSelectedRow());
    }//GEN-LAST:event_jTableUsuariosMouseClicked

    public void Guardar(String usuario, String nombre, String clave, String perfil, String estado) {
        try {
            if (!usuario.equals("")) {

                PreparedStatement ps = con.prepareStatement("INSERT INTO TBLUSUARIO (usuario, nombre, clave, estado, perfil) VALUES \n"
                        + "        ('" + usuario + "','" + nombre + "', '" + clave + "', '" + estado + "','" + perfil + "')");
                ResultSet rs = ps.executeQuery();
            } else {
                mesaje = new Mensaje((JFrame) getRootPane().getParent(), true, "Hubo un error en el envío de los datos, \n por favor vuelve a intentarlo", 0);
                mesaje.setVisible(true);
            }

            mesaje = new Mensaje((JFrame) getRootPane().getParent(), true, "Usuario almacenado exitosamente", 2);
            mesaje.setVisible(true);
            vaciarTabla();
            llenarTabla();
            con.commit();
        } catch (Exception e) {
            e.printStackTrace();
            mesaje = new Mensaje((JFrame) getRootPane().getParent(), true, "Hubo un error en el envío de los datos, \n por favor vuelve a intentarlo", 0);
            mesaje.setVisible(true);
        }
    }

    public void Actualizar(String usuario, String nombre, String clave, String perfil, String estado) {
        /* "update tblusuario set nombre=?, clave=?, perfil=?, email=?, estado=? ,genero=? "
         + "  where usuario=?";*/
        try {
            if (usuario != "q") {

                PreparedStatement ps = con.prepareStatement("update tblusuario set nombre='" + nombre + "', clave='" + clave + "',"
                        + " estado='" + estado + "', perfil='" + perfil + "'  where usuario='" + usuario + "'");
                ResultSet rs = ps.executeQuery();
            } else {
                mesaje = new Mensaje((JFrame) getRootPane().getParent(), true, "Hubo un error en el envío de los datos, \n por favor vuelve a intentarlo", 0);
                mesaje.setVisible(true);
            }

            mesaje = new Mensaje((JFrame) getRootPane().getParent(), true, "Usuario actualizado exitosamente", 2);
            mesaje.setVisible(true);
            vaciarTabla();
            llenarTabla();
            con.commit();
        } catch (Exception e) {
            e.printStackTrace();
            mesaje = new Mensaje((JFrame) getRootPane().getParent(), true, "Hubo un error en el envío de los datos, \n por favor vuelve a intentarlo", 0);
            mesaje.setVisible(true);
        }
    }//fin actualizar dato

    public void Eliminar(String usuario) {
        try {
            if (!usuario.equals("")) {

                PreparedStatement ps = con.prepareStatement("DELETE FROM TBLUSUARIO WHERE USUARIO='" + usuario + "'");;
                ResultSet rs = ps.executeQuery();
            } else {
                mesaje = new Mensaje((JFrame) getRootPane().getParent(), true, "Hubo un error en el envío de los datos, \n por favor vuelve a intentarlo", 0);
                mesaje.setVisible(true);
            }

            mesaje = new Mensaje((JFrame) getRootPane().getParent(), true, "Usuario eliminado exitosamente", 2);
            mesaje.setVisible(true);
            vaciarTabla();
            llenarTabla();
            con.commit();
        } catch (Exception e) {
            e.printStackTrace();
            mesaje = new Mensaje((JFrame) getRootPane().getParent(), true, "Hubo un error en el envío de los datos, \n por favor vuelve a intentarlo", 0);
            mesaje.setVisible(true);
        }

    }

    public void Buscar(String usuario) {
        try {
            if (!usuario.equals("")) {

                PreparedStatement ps = con.prepareStatement("SELECT * FROM TBLUSUARIO WHERE USUARIO='" + usuario + "'");;
                ResultSet rs = ps.executeQuery();
                String cadena[] = new String[5];

                while (rs.next()) {
                    cadena = new String[5];
                    for (int x = 0; x < 5; ++x) {
                        cadena[x] = rs.getObject(x + 1).toString();
                    }
                }
                llenarCampos(cadena[0], cadena[1], cadena[3], cadena[4]);
            } else {
                mesaje = new Mensaje((JFrame) getRootPane().getParent(), true, "No hay valor asignado", 0);
                mesaje.setVisible(true);
            }

        } catch (Exception e) {
            e.printStackTrace();
            mesaje = new Mensaje((JFrame) getRootPane().getParent(), true, "Hubo un error en el envío de los datos, \n por favor vuelve a intentarlo", 0);
            mesaje.setVisible(true);
        }

    }

    public void BuscarPorIndice(int fila) {
        try {
            if (fila >= 0) {

                PreparedStatement ps = con.prepareStatement("SELECT * FROM TBLUSUARIO WHERE USUARIO='" + modeloLista.getValueAt(fila, 0) + "'");;
                ResultSet rs = ps.executeQuery();
                String cadena[] = new String[5];

                while (rs.next()) {
                    cadena = new String[5];
                    for (int x = 0; x < 5; ++x) {
                        cadena[x] = rs.getObject(x + 1).toString();
                    }
                }
                llenarCampos(cadena[0], cadena[1], cadena[3], cadena[4]);
            } else {
                mesaje = new Mensaje((JFrame) getRootPane().getParent(), true, "Hubo un error en el envío de los datos, \n por favor vuelve a intentarlo", 0);
                mesaje.setVisible(true);
            }

        } catch (Exception e) {
            e.printStackTrace();
            mesaje = new Mensaje((JFrame) getRootPane().getParent(), true, "Hubo un error en el envío de los datos, \n por favor vuelve a intentarlo", 0);
            mesaje.setVisible(true);
        }

    }

    public void llenarTabla() {
        try {
            PreparedStatement ps = con.prepareStatement("SELECT USUARIO, NOMBRE, ESTADO, PERFIL FROM TBLUSUARIO");
            ResultSet rs = ps.executeQuery();
            while (rs.next()) {
                Object[] fila = new Object[4];//Creamos un Objeto con tantos parámetros como datos retorne cada fila 
                // de la consulta

                for (int i = 0; i < 4; i++) {
                    fila[i] = rs.getObject(i + 1);
                }

                modeloLista.addRow(fila); // Añade una fila al final del modelo de la tabla
            }
            con.commit();

        } catch (Exception e) {
            // TODO Auto-generated catch block
            e.printStackTrace();
        }
    }

    private String[] getColumnas() {
        String columna[] = new String[]{"Usuario", "Nombre", "Estado", " Perfil"};
        return columna;
    }

    public void vaciarTabla() {
        while (modeloLista.getRowCount() > 0) {
            modeloLista.removeRow(0);
        }
    }

    public void llenarCampos(String usuario, String nombre, String estado, String perfil) {
        int i = 0;
        int j = 0;
        jTextFieldUsuario.setText(usuario);
        jTextFieldNombre.setText(nombre);

        if (perfil.equals("Administrador")) {
            i = 0;
        } else if (perfil.equals("Soporte")) {
            i = 1;
        }

        if (estado.equals("Activo")) {
            j = 0;
        } else if (estado.equals("Inactivo")) {
            j = 1;
        }

        jComboBoxEstado.setSelectedIndex(j);
        jComboBoxPerfil.setSelectedIndex(i);
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox jComboBoxEstado;
    private javax.swing.JComboBox jComboBoxPerfil;
    private javax.swing.JLabel jLabeEliminar;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabelActualizar;
    private javax.swing.JLabel jLabelBuscar;
    private javax.swing.JLabel jLabelClave;
    private javax.swing.JLabel jLabelEstado;
    private javax.swing.JLabel jLabelGuardar;
    private javax.swing.JLabel jLabelNombre;
    private javax.swing.JLabel jLabelPerfil;
    private javax.swing.JLabel jLabelTitulo;
    private javax.swing.JLabel jLabelUsuario;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanelActualizar;
    private javax.swing.JPanel jPanelBuscar;
    private javax.swing.JPanel jPanelEliminar;
    private javax.swing.JPanel jPanelGuardar;
    private javax.swing.JPasswordField jPasswordFieldclave;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable jTableUsuarios;
    private javax.swing.JTextField jTextFieldID1;
    private javax.swing.JTextField jTextFieldNombre;
    private javax.swing.JTextField jTextFieldUsuario;
    // End of variables declaration//GEN-END:variables
}
